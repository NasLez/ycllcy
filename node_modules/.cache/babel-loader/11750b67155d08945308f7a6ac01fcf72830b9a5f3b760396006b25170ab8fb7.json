{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"StatisticalSubmissionInformation\",\n  mounted() {\n    this.echartsInit();\n  },\n  data() {\n    return {\n      userData: {\n        name: '',\n        phone: '',\n        email: '',\n        thesisNumber: '0',\n        thesisScore: '0',\n        projectNumber: '0',\n        projectScore: '0',\n        score: 0\n      },\n      option: {\n        title: {\n          text: '近半年提交数据统计'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['论文', '项目']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '论文',\n          type: 'line',\n          stack: 'Total',\n          data: [0, 0, 0, 0, 0, 0]\n        }, {\n          name: '项目',\n          type: 'line',\n          stack: 'Total',\n          data: [0, 0, 0, 0, 0, 0]\n        }]\n      }\n    };\n  },\n  created: function () {\n    this.email = this.$route.query.email;\n    // this.$message.success(this.email)\n    axios.get(`mu/getUsernames/email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.name = res.data.name;\n        this.userData.phone = res.data.phone;\n        this.userData.email = res.data.email;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    axios.get(`mu/project/getScoreByEmail?email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.projectScore = res.data;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      }\n    });\n    axios.get(`mu/thesis/getScoreByEmail?email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.thesisScore = res.data;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      }\n    });\n    axios.get(`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n      if (res.status === 200) {\n        let arr = Array.from(res.data);\n        this.userData.projectNumber = arr.length;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    axios.get(`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n      if (res.status === 200) {\n        let arr = Array.from(res.data);\n        this.userData.thesisNumber = arr.length;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n  },\n  methods: {\n    echartsInit() {\n      let myChart = this.$echarts.init(document.getElementById('main'), 'dark');\n      this.option.series[1].data[0] = 100;\n      let nowDate = new Date();\n      let date = {\n        year: nowDate.getFullYear(),\n        month: nowDate.getMonth() + 1,\n        date: nowDate.getDate()\n      };\n      this.option.xAxis.data[5] = date.month + '月';\n      this.option.xAxis.data[4] = date.month - 1 + '月';\n      this.option.xAxis.data[3] = date.month - 2 + '月';\n      this.option.xAxis.data[2] = date.month - 3 + '月';\n      this.option.xAxis.data[1] = date.month - 4 + '月';\n      this.option.xAxis.data[0] = date.month - 5 + '月';\n      axios.get(`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n        if (res.status === 200) {\n          // let arr = Array.from(res.data);\n          // this.$message.success(res.data[0].setTime)\n          let projectDate = new Date(res.data[0].setTime);\n          this.month = projectDate.getMonth() + 1;\n          if (date.month == this.month) {\n            this.$message.success(this.month);\n            this.option.series[1].data[0] = 1;\n          }\n        } else if (res.status === 403) {\n          this.$message.error(\"Unauthorized\");\n        } else if (res.status === 400) {\n          this.$message.error(\"Serve Error\");\n        } else if (res.status === 404) {\n          this.$message.error(\"Not Found\");\n        }\n      });\n      myChart.setOption(this.option);\n    }\n  }\n};","map":{"version":3,"mappings":"AA0CA;AACA;EACAA;EACAC;IACA;EACA;EACAC;IACA;MACAC;QACAH;QACAI;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;UACAC;QACA;QACAC;UACAC;QACA;QACAC;UACAd;QACA;QACAe;UACAC;UACAC;UACAC;UACAC;QACA;QACAC;UACAC;YACAC;UACA;QACA;QACAC;UACAC;UACAC;UACAzB;QACA;QACA0B;UACAF;QACA;QACAG,SACA;UACA7B;UACA0B;UACAI;UACA5B;QACA,GACA;UACAF;UACA0B;UACAI;UACA5B;QACA;MAEA;IACA;EACA;EACA6B;IACA;IACA;IACAC;MACA;QACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;MACA;QACAC;QACAC;QACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAL;QACA;UACA;UACA;UACA;UACA;UACA;YACA;YACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;MACA;MACAM;IACA;EACA;AACA","names":["name","mounted","data","userData","phone","email","thesisNumber","thesisScore","projectNumber","projectScore","score","option","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","stack","created","axios","methods","echartsInit","year","month","date","myChart"],"sourceRoot":"src/view","sources":["StatisticalSubmissionInformation.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <el-descriptions  :column=\"2\" border >\r\n      <el-descriptions-item\r\n          label=\"用户名\"\r\n          label-class-name=\"my-label\"\r\n          content-class-name=\"my-content\">\r\n        {{ userData.name }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"手机号\" >\r\n        {{ userData.phone }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"邮箱\">\r\n        {{ userData.email }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n          content-class-name=\"my-content\"\r\n          label=\"上传总分数\">\r\n        {{ parseInt(this.userData.thesisScore)+parseInt(this.userData.projectScore) }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"上传论文总数量\">\r\n        {{ userData.thesisNumber }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"论文总分数\">\r\n        {{ userData.thesisScore }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"上传项目总数量\">\r\n        {{ userData.projectNumber }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"项目总分数\">\r\n        {{ userData.projectScore }}\r\n      </el-descriptions-item>\r\n    </el-descriptions>\r\n    <el-button type=\"\" @click=\"echartsInit\"></el-button>\r\n    <div style=\"width: auto;height: 500px\" id=\"main\">\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  name: \"StatisticalSubmissionInformation\",\r\n  mounted() {\r\n    this.echartsInit();\r\n  },\r\n  data() {\r\n    return {\r\n      userData: {\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        thesisNumber: '0',\r\n        thesisScore: '0',\r\n        projectNumber: '0',\r\n        projectScore: '0',\r\n        score: 0\r\n      },\r\n      option: {\r\n        title: {\r\n          text: '近半年提交数据统计'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['论文', '项目']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '论文',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [0, 0, 0, 0, 0, 0]\r\n          },\r\n          {\r\n            name: '项目',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [0, 0, 0, 0, 0, 0]\r\n          },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created: function () {\r\n    this.email=this.$route.query.email\r\n    // this.$message.success(this.email)\r\n    axios.get(`mu/getUsernames/email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.name=res.data.name\r\n        this.userData.phone=res.data.phone\r\n        this.userData.email=res.data.email\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    axios.get(`mu/project/getScoreByEmail?email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.projectScore=res.data\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }\r\n    })\r\n    axios.get(`mu/thesis/getScoreByEmail?email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.thesisScore=res.data\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }\r\n    })\r\n    axios.get((`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n      if(res.status===200){\r\n        let arr = Array.from(res.data);\r\n        this.userData.projectNumber=arr.length\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    axios.get((`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n      if(res.status===200){\r\n        let arr = Array.from(res.data);\r\n        this.userData.thesisNumber=arr.length\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n  },\r\n  methods:{\r\n    echartsInit() {\r\n      let myChart = this.$echarts.init(document.getElementById('main'),'dark');\r\n      this.option.series[1].data[0]=100\r\n      let nowDate = new Date();\r\n      let date = {\r\n        year: nowDate.getFullYear(),\r\n        month: nowDate.getMonth() + 1,\r\n        date: nowDate.getDate(),\r\n      }\r\n      this.option.xAxis.data[5]=date.month+'月'\r\n      this.option.xAxis.data[4]=date.month-1+'月'\r\n      this.option.xAxis.data[3]=date.month-2+'月'\r\n      this.option.xAxis.data[2]=date.month-3+'月'\r\n      this.option.xAxis.data[1]=date.month-4+'月'\r\n      this.option.xAxis.data[0]=date.month-5+'月'\r\n      axios.get((`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n        if(res.status===200){\r\n          // let arr = Array.from(res.data);\r\n          // this.$message.success(res.data[0].setTime)\r\n          let projectDate=new Date(res.data[0].setTime)\r\n          this.month=projectDate.getMonth()+1\r\n          if(date.month==this.month){\r\n            this.$message.success(this.month)\r\n            this.option.series[1].data[0]=1\r\n          }\r\n        }else if(res.status===403){\r\n          this.$message.error(\"Unauthorized\")\r\n        }else if(res.status===400){\r\n          this.$message.error(\"Serve Error\")\r\n        }else if(res.status===404){\r\n          this.$message.error(\"Not Found\")\r\n        }\r\n      })\r\n      myChart.setOption(this.option);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.my-label {\r\n  background: #E1F3D8;\r\n}\r\n\r\n.my-content {\r\n  background: #FDE2E2;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}