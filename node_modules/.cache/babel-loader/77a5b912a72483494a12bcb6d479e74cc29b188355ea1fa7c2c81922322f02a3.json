{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport store from \"../vuex/store.js\";\nimport CommonAside from \"../component/CommonAside\";\nimport CommonHeader from \"@/component/CommonHeader\";\n// import StatisticalSubmissionInformation from \"@/component/StatisticalSubmissionInformation\";\n\nexport default {\n  name: \"HomePage\",\n  store,\n  data() {\n    return {\n      userData: {\n        name: '',\n        phone: '',\n        email: '',\n        thesisNumber: '0',\n        thesisScore: '0',\n        projectNumber: '0',\n        projectScore: '0',\n        score: 0\n      },\n      editDialogVisible: false,\n      showAdmin: \"\",\n      userinfo: {\n        \"id\": \"\",\n        \"username\": \"\",\n        \"phone\": \"\",\n        \"email\": \"\",\n        \"school\": \"\",\n        \"password\": \"\",\n        \"isAdmin\": \"\",\n        \"code\": \"\",\n        \"name\": \"\"\n      },\n      editFormRules: {\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          trigger: 'blur'\n        }]\n      },\n      thesisMonth: [0, 0, 0, 0, 0, 0],\n      projectMonth: [0, 0, 0, 0, 0, 0],\n      option: {\n        title: {\n          text: '近半年提交数据统计'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['论文', '项目']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: []\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: '论文',\n          type: 'line',\n          stack: 'Total',\n          data: [0, 0, 0, 0, 0, 0]\n        }, {\n          name: '项目',\n          type: 'line',\n          stack: 'Total',\n          data: [0, 0, 0, 0, 0, 0]\n        }]\n      }\n    };\n  },\n  components: {\n    CommonAside,\n    CommonHeader\n    // StatisticalSubmissionInformation\n  },\n\n  mounted() {\n    this.echartsInit();\n  },\n  created: function () {\n    let that = this;\n    // console.log(this.$route.query.email)\n    // this.email1 = this.$route.query.email;\n    console.log(this.$store.state.userinfo.email);\n    this.email1 = this.$store.state.userinfo.email;\n    GetUser(this.email1);\n    function GetUser(MyEmail) {\n      axios.get(`mu/getUsernames/email=${MyEmail}`, {\n        email: MyEmail\n      }).then(res => {\n        console.log(res.data);\n        if (res.data.isAdmin === \"1\") {\n          that.$data.showAdmin = \"管理员\";\n        } else {\n          that.$data.showAdmin = \"用户\";\n        }\n        that.$data.userinfo.id = res.data.id;\n        that.$data.userinfo.username = res.data.username;\n        that.$data.userinfo.isAdmin = res.data.isAdmin;\n        // that.$store.state.userinfo.isAdmin = res.data.isAdmin;\n        that.$data.userinfo.name = res.data.name;\n        that.$data.userinfo.phone = res.data.phone;\n        that.$data.userinfo.email = res.data.email;\n        that.$data.userinfo.school = res.data.school;\n        that.$data.userinfo.password = res.data.password;\n        that.$data.userinfo.code = res.data.code;\n      });\n    }\n    this.email = this.$store.state.userinfo.email;\n    // this.$message.success(this.email)\n    axios.get(`mu/getUsernames/email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.name = res.data.name;\n        this.userData.phone = res.data.phone;\n        this.userData.email = res.data.email;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    axios.get(`mu/project/getScoreByEmail?email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.projectScore = res.data;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      }\n    });\n    axios.get(`mu/thesis/getScoreByEmail?email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.thesisScore = res.data;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      }\n    });\n    axios.get(`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n      if (res.status === 200) {\n        let arr = Array.from(res.data);\n        this.userData.projectNumber = arr.length;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    axios.get(`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n      if (res.status === 200) {\n        let arr = Array.from(res.data);\n        this.userData.thesisNumber = arr.length;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n  },\n  methods: {\n    StatisticalSubmissionInformation() {\n      this.$router.push({\n        path: '/StatisticalSubmissionInformation'\n      });\n    },\n    ViewProjectsAndPapers() {\n      this.$store.state.userinfo.isAdmin = this.userinfo.isAdmin;\n      this.$router.push({\n        path: '/UserViewProjectsAndPapers'\n      });\n    },\n    GetUser(MyEmail) {\n      let that = this;\n      axios.get(`mu/getUsernames/email=${MyEmail}`, {\n        email: MyEmail\n      }).then(res => {\n        console.log(res.data);\n        if (res.data.isAdmin === \"1\") {\n          that.$data.showAdmin = \"管理员\";\n        } else {\n          that.$data.showAdmin = \"用户\";\n        }\n        that.$data.userinfo.id = res.data.id;\n        that.$data.userinfo.username = res.data.username;\n        that.$data.userinfo.isAdmin = res.data.isAdmin;\n        this.$store.state.userinfo.isAdmin = res.data.isAdmin;\n        that.$data.userinfo.name = res.data.name;\n        that.$data.userinfo.phone = res.data.phone;\n        that.$data.userinfo.email = res.data.email;\n        that.$data.userinfo.school = res.data.school;\n        that.$data.userinfo.password = res.data.password;\n        that.$data.userinfo.code = res.data.code;\n      });\n    },\n    showEditDialog() {\n      this.editDialogVisible = true;\n    },\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    editUserInfo() {\n      // 将修改数据传送到后端，并接收修改后的返回数据\n      console.log(\"正在修改用户信息\");\n      let fulluser = this.$data.userinfo;\n      console.log(fulluser);\n      axios({\n        method: 'post',\n        url: `mu/updateUser`,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: fulluser\n      }).then(res => {\n        console.log(res);\n        console.log(\"修改成功\");\n      });\n      //关闭会话框\n      this.editDialogVisible = false;\n      //重新获取列表\n      this.methods.GetUser(this.userinfo.email);\n      //提示修改成功\n      // })\n    },\n\n    usermanagement() {\n      if (this.$data.userinfo.isAdmin === \"1\") {\n        this.$router.push({\n          path: '/UserManagement'\n        });\n      } else {\n        this.$message({\n          message: \"没有权限！\",\n          type: 'warning'\n        });\n      }\n    },\n    logout() {\n      axios.get('mu/logout').then(res => {\n        this.$message({\n          message: \"注销登录成功！\",\n          type: 'success'\n        });\n        return res;\n      });\n      this.$router.push({\n        path: '/'\n      });\n    },\n    echartsInit: function () {\n      this.email = this.$store.state.userinfo.email;\n      let myChart = this.$echarts.init(document.getElementById('main'), 'dark');\n      let nowDate = new Date();\n      let date = {\n        year: nowDate.getFullYear(),\n        month: nowDate.getMonth() + 1,\n        date: nowDate.getDate()\n      };\n      this.option.xAxis.data[5] = date.month + '月';\n      this.option.xAxis.data[4] = date.month - 1 + '月';\n      this.option.xAxis.data[3] = date.month - 2 + '月';\n      this.option.xAxis.data[2] = date.month - 3 + '月';\n      this.option.xAxis.data[1] = date.month - 4 + '月';\n      this.option.xAxis.data[0] = date.month - 5 + '月';\n      axios.get(`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n        if (res.status === 200) {\n          console.log(\"project 200\");\n          for (let i = 0; i < res.data.length; i++) {\n            let projectDate = new Date(res.data[i].setTime);\n            this.month = projectDate.getMonth() + 1;\n            if (date.month == this.month) {\n              this.projectMonth[5]++;\n            } else if (date.month - 1 == this.month) {\n              this.projectMonth[4]++;\n            } else if (date.month - 2 == this.month) {\n              this.projectMonth[3]++;\n            } else if (date.month - 3 == this.month) {\n              this.projectMonth[2]++;\n            } else if (date.month - 4 == this.month) {\n              this.projectMonth[1]++;\n            } else if (date.month - 5 == this.month) {\n              this.projectMonth[0]++;\n            }\n          }\n          this.option.series[1].data = this.projectMonth;\n          axios.get(`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res0 => {\n            if (res0.status === 200) {\n              console.log(\"thesis 200\");\n              for (let i = 0; i < res0.data.length; i++) {\n                let thesisDate = new Date(res0.data[i].submitTime);\n                this.month = thesisDate.getMonth() + 1;\n                if (date.month == this.month) {\n                  this.thesisMonth[5]++;\n                } else if (date.month - 1 == this.month) {\n                  this.thesisMonth[4]++;\n                } else if (date.month - 2 == this.month) {\n                  this.thesisMonth[3]++;\n                } else if (date.month - 3 == this.month) {\n                  this.thesisMonth[2]++;\n                } else if (date.month - 4 == this.month) {\n                  this.thesisMonth[1]++;\n                } else if (date.month - 5 == this.month) {\n                  this.thesisMonth[0]++;\n                }\n              }\n              this.option.series[0].data = this.thesisMonth;\n              myChart.setOption(this.option);\n            } else if (res0.status === 420) {\n              myChart.setOption(this.option);\n            }\n          });\n        }\n      }, error => {\n        console.log(error);\n        if (error && error.response) {\n          switch (error.response.status) {\n            case 400:\n              this.$message.error(\"400\");\n              break;\n            case 403:\n              this.$message.error(\"没有权限！\");\n              break;\n            case 420:\n              {\n                this.$message.error(\"没有找到！\");\n              }\n              break;\n            default:\n              this.$message.error(\"连接错误！\");\n          }\n        } else {\n          this.$message.error(\"连接服务器失败！\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAkGA;AACA;AACA;AACA;AACA;;AAEA;EACAA;EACAC;EACAC;IACA;MACAC;QACAH;QACAI;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACAC;QACAT,QACA;UACAU;UACAC;UACAC;QACA,GACA;UACAA;QACA;MAEA;MACAC;MACAC;MACAC;QACAC;UACAC;QACA;QACAC;UACAN;QACA;QACAO;UACAtB;QACA;QACAuB;UACAC;UACAC;UACAC;UACAC;QACA;QACAC;UACAC;YACAC;UACA;QACA;QACAC;UACAC;UACAC;UACAjC;QACA;QACAkC;UACAF;QACA;QACAG,SACA;UACArC;UACAkC;UACAI;UACApC;QACA,GACA;UACAF;UACAkC;UACAI;UACApC;QACA;MAEA;IACA;EACA;EACAqC;IACAC;IACAC;IACA;EACA;;EACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACAC;IACA;IACAC;IAEA;MACAC;QACAzC;MACA;QACAuC;QACA;UACAG;QACA;UACAA;QACA;QACAA;QACAA;QACAA;QACA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;MACA;IACA;IAEA;IACA;IACAD;MACA;QACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;EACA;EACAE;IACAC;MACA;QAAAC;MAAA;IACA;IACAC;MACA;MACA;QAAAD;MAAA;IACA;IACAL;MACA;MACAC;QACAzC;MACA;QACAuC;QACA;UACAG;QACA;UACAA;QACA;QACAA;QACAA;QACAA;QACA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;MACA;IACA;IACAK;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACAV;MACA;MACAA;MACAE;QACAS;QACAC;QACAC;UACA;QACA;QACAvD;MACA;QACA0C;QACAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;IACAc;MACA;QACA;UAAAR;QAAA;MACA;QACA;UACAlC;UACAkB;QACA;MACA;IACA;IACAyB;MACAb;QACA;UACA9B;UACAkB;QACA;QACA;MACA;MACA;QAAAgB;MAAA;IACA;IACAU;MACA;MACA;MACA;MACA;QACAC;QACAC;QACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEAjB;QACA;UACAF;UACA;YACA;YACA;YACA;cACA;YACA;cACA;YACA;cACA;YACA;cACA;YACA;cACA;YACA;cACA;YACA;UACA;UACA;UACAE;YACA;cACAF;cACA;gBACA;gBACA;gBACA;kBACA;gBACA;kBACA;gBACA;kBACA;gBACA;kBACA;gBACA;kBACA;gBACA;kBACA;gBACA;cACA;cACA;cACAoB;YACA;cACAA;YACA;UACA;QACA;MACA;QACApB;QACA;UACA;YACA;cAAA;cACA;YACA;cAAA;cACA;YACA;cAAA;gBACA;cAEA;cACA;YACA;cAAA;UAAA;QAEA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","store","data","userData","phone","email","thesisNumber","thesisScore","projectNumber","projectScore","score","editDialogVisible","showAdmin","userinfo","editFormRules","required","message","trigger","thesisMonth","projectMonth","option","title","text","tooltip","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","stack","components","CommonAside","CommonHeader","mounted","created","console","GetUser","axios","that","methods","StatisticalSubmissionInformation","path","ViewProjectsAndPapers","showEditDialog","editDialogClosed","editUserInfo","method","url","headers","usermanagement","logout","echartsInit","year","month","date","myChart"],"sourceRoot":"src/view","sources":["HomePage.vue"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <el-header>\r\n      <CommonHeader/>\r\n    </el-header>\r\n    <el-container>\r\n      <el-aside width=\"200px\">\r\n        <CommonAside/>\r\n      </el-aside>\r\n      <el-main>\r\n        <el-col :span=\"8\">\r\n          <div class=\"grid-content1\">\r\n            <el-card class=\"box-card\" style=\"position: absolute;left: 400px\">\r\n              <div class=\"user\">\r\n                <div class=\"user-info\">\r\n                  <a class=\"user-nickname\">用户名：{{ userinfo.username }}</a><br>\r\n                  <a class=\"user-name\">真实姓名：{{ userinfo.name }}</a><br>\r\n                  <a class=\"user-access\">身份：{{ showAdmin }}</a><br>\r\n                  <a class=\"user-phone\">电话号码：{{ userinfo.phone }}</a><br>\r\n                  <a class=\"user-email\">邮箱地址：{{ userinfo.email }}</a><br>\r\n                  <a class=\"user-school\">学校：{{ userinfo.school }}</a><br>\r\n                </div>\r\n              </div>\r\n              <template>\r\n                <el-button size=\"small\" type=\"primary\" icon=\"el-icon-edit\" round\r\n                           @click=\"showEditDialog()\"></el-button>\r\n              </template>\r\n            </el-card>\r\n            <el-card class=\"box-card\" style=\"position: absolute;left: 400px\" v-if=\"editDialogVisible\">\r\n              <el-dialog\r\n                  title=\"修改用户\"\r\n                  :visible.sync=\"editDialogVisible\"\r\n                  width=\"50%\" @close=\"editDialogClosed\">\r\n                <el-form :model=\"userinfo\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n                  <!--     disabled表示禁用状态     -->\r\n\r\n                  <el-form-item label=\"真实姓名\" prop=\"name\">\r\n                    <el-input v-model=\"userinfo.name\" disabled></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"身份\" prop=\"isAdmin\">\r\n                    <el-input v-model=\"showAdmin\" disabled></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"userinfo.email\" disabled></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"用户名\" prop=\"username\">\r\n                    <el-input v-model=\"userinfo.username\"></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"电话号码\" prop=\"phone\">\r\n                    <el-input v-model=\"userinfo.phone\"></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"学校\" prop=\"school\">\r\n                    <el-input v-model=\"userinfo.school\"></el-input>\r\n                  </el-form-item>\r\n                </el-form>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n              </span>\r\n              </el-dialog>\r\n            </el-card>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"16\">\r\n          <el-row>\r\n            <el-descriptions :column=\"1\" border class=\"grid-content2\">\r\n              <el-descriptions-item\r\n                  content-class-name=\"my-content\"\r\n                  label=\"上传总分数\">\r\n                {{ parseInt(this.userData.thesisScore) + parseInt(this.userData.projectScore) }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"上传论文总数量\">\r\n                {{ userData.thesisNumber }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"论文总分数\">\r\n                {{ userData.thesisScore }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"上传项目总数量\">\r\n                {{ userData.projectNumber }}\r\n              </el-descriptions-item>\r\n              <el-descriptions-item label=\"项目总分数\">\r\n                {{ userData.projectScore }}\r\n              </el-descriptions-item>\r\n            </el-descriptions>\r\n          </el-row>\r\n          <el-row>\r\n            <div style=\"width: 600px;height: 300px\" id=\"main\">\r\n            </div>\r\n          </el-row>\r\n        </el-col>\r\n\r\n      </el-main>\r\n      <!--        <el-footer>Footer</el-footer>-->\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport store from \"../vuex/store.js\"\r\nimport CommonAside from \"../component/CommonAside\"\r\nimport CommonHeader from \"@/component/CommonHeader\";\r\n// import StatisticalSubmissionInformation from \"@/component/StatisticalSubmissionInformation\";\r\n\r\nexport default {\r\n  name: \"HomePage\",\r\n  store,\r\n  data() {\r\n    return {\r\n      userData: {\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        thesisNumber: '0',\r\n        thesisScore: '0',\r\n        projectNumber: '0',\r\n        projectScore: '0',\r\n        score: 0\r\n      },\r\n      editDialogVisible: false,\r\n      showAdmin: \"\",\r\n      userinfo: {\r\n        \"id\": \"\",\r\n        \"username\": \"\",\r\n        \"phone\": \"\",\r\n        \"email\": \"\",\r\n        \"school\": \"\",\r\n        \"password\": \"\",\r\n        \"isAdmin\": \"\",\r\n        \"code\": \"\",\r\n        \"name\": \"\"\r\n      },\r\n      editFormRules: {\r\n        email: [\r\n          {\r\n            required: true,\r\n            message: '请输入邮箱',\r\n            trigger: 'blur'\r\n          },\r\n          {\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n      },\r\n      thesisMonth: [0, 0, 0, 0, 0, 0],\r\n      projectMonth: [0, 0, 0, 0, 0, 0],\r\n      option: {\r\n        title: {\r\n          text: '近半年提交数据统计'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['论文', '项目']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '论文',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [0, 0, 0, 0, 0, 0]\r\n          },\r\n          {\r\n            name: '项目',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [0, 0, 0, 0, 0, 0]\r\n          },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    CommonAside,\r\n    CommonHeader,\r\n    // StatisticalSubmissionInformation\r\n  },\r\n  mounted() {\r\n    this.echartsInit();\r\n  },\r\n  created: function () {\r\n    let that = this;\r\n    // console.log(this.$route.query.email)\r\n    // this.email1 = this.$route.query.email;\r\n    console.log(this.$store.state.userinfo.email)\r\n    this.email1 = this.$store.state.userinfo.email;\r\n    GetUser(this.email1);\r\n\r\n    function GetUser(MyEmail) {\r\n      axios.get(`mu/getUsernames/email=${MyEmail}`, {\r\n        email: MyEmail,\r\n      }).then(res => {\r\n        console.log(res.data);\r\n        if (res.data.isAdmin === \"1\") {\r\n          that.$data.showAdmin = \"管理员\";\r\n        } else {\r\n          that.$data.showAdmin = \"用户\";\r\n        }\r\n        that.$data.userinfo.id = res.data.id;\r\n        that.$data.userinfo.username = res.data.username;\r\n        that.$data.userinfo.isAdmin = res.data.isAdmin;\r\n        // that.$store.state.userinfo.isAdmin = res.data.isAdmin;\r\n        that.$data.userinfo.name = res.data.name;\r\n        that.$data.userinfo.phone = res.data.phone;\r\n        that.$data.userinfo.email = res.data.email;\r\n        that.$data.userinfo.school = res.data.school;\r\n        that.$data.userinfo.password = res.data.password;\r\n        that.$data.userinfo.code = res.data.code;\r\n      });\r\n    }\r\n\r\n    this.email = this.$store.state.userinfo.email\r\n    // this.$message.success(this.email)\r\n    axios.get(`mu/getUsernames/email=${this.email}`).then(res => {\r\n      if (res.status === 200) {\r\n        this.userData.name = res.data.name\r\n        this.userData.phone = res.data.phone\r\n        this.userData.email = res.data.email\r\n      } else if (res.status === 403) {\r\n        this.$message.error(\"Unauthorized\")\r\n      } else if (res.status === 404) {\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    axios.get(`mu/project/getScoreByEmail?email=${this.email}`).then(res => {\r\n      if (res.status === 200) {\r\n        this.userData.projectScore = res.data\r\n      } else if (res.status === 403) {\r\n        this.$message.error(\"Unauthorized\")\r\n      } else if (res.status === 400) {\r\n        this.$message.error(\"Serve Error\")\r\n      }\r\n    })\r\n    axios.get(`mu/thesis/getScoreByEmail?email=${this.email}`).then(res => {\r\n      if (res.status === 200) {\r\n        this.userData.thesisScore = res.data\r\n      } else if (res.status === 403) {\r\n        this.$message.error(\"Unauthorized\")\r\n      } else if (res.status === 400) {\r\n        this.$message.error(\"Serve Error\")\r\n      }\r\n    })\r\n    axios.get((`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n      if (res.status === 200) {\r\n        let arr = Array.from(res.data);\r\n        this.userData.projectNumber = arr.length\r\n      } else if (res.status === 403) {\r\n        this.$message.error(\"Unauthorized\")\r\n      } else if (res.status === 400) {\r\n        this.$message.error(\"Serve Error\")\r\n      } else if (res.status === 404) {\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    axios.get((`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n      if (res.status === 200) {\r\n        let arr = Array.from(res.data);\r\n        this.userData.thesisNumber = arr.length\r\n      } else if (res.status === 403) {\r\n        this.$message.error(\"Unauthorized\")\r\n      } else if (res.status === 400) {\r\n        this.$message.error(\"Serve Error\")\r\n      } else if (res.status === 404) {\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    StatisticalSubmissionInformation() {\r\n      this.$router.push({path: '/StatisticalSubmissionInformation'})\r\n    },\r\n    ViewProjectsAndPapers() {\r\n      this.$store.state.userinfo.isAdmin = this.userinfo.isAdmin\r\n      this.$router.push({path: '/UserViewProjectsAndPapers'})\r\n    },\r\n    GetUser(MyEmail) {\r\n      let that = this;\r\n      axios.get(`mu/getUsernames/email=${MyEmail}`, {\r\n        email: MyEmail,\r\n      }).then(res => {\r\n        console.log(res.data);\r\n        if (res.data.isAdmin === \"1\") {\r\n          that.$data.showAdmin = \"管理员\";\r\n        } else {\r\n          that.$data.showAdmin = \"用户\";\r\n        }\r\n        that.$data.userinfo.id = res.data.id;\r\n        that.$data.userinfo.username = res.data.username;\r\n        that.$data.userinfo.isAdmin = res.data.isAdmin;\r\n        this.$store.state.userinfo.isAdmin = res.data.isAdmin;\r\n        that.$data.userinfo.name = res.data.name;\r\n        that.$data.userinfo.phone = res.data.phone;\r\n        that.$data.userinfo.email = res.data.email;\r\n        that.$data.userinfo.school = res.data.school;\r\n        that.$data.userinfo.password = res.data.password;\r\n        that.$data.userinfo.code = res.data.code;\r\n      });\r\n    },\r\n    showEditDialog() {\r\n      this.editDialogVisible = true;\r\n    },\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    editUserInfo() {\r\n      // 将修改数据传送到后端，并接收修改后的返回数据\r\n      console.log(\"正在修改用户信息\")\r\n      let fulluser = this.$data.userinfo;\r\n      console.log(fulluser);\r\n      axios({\r\n        method: 'post',\r\n        url: `mu/updateUser`,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        data: fulluser,\r\n      }).then(res => {\r\n        console.log(res);\r\n        console.log(\"修改成功\");\r\n      })\r\n      //关闭会话框\r\n      this.editDialogVisible = false\r\n      //重新获取列表\r\n      this.methods.GetUser(this.userinfo.email);\r\n      //提示修改成功\r\n      // })\r\n    },\r\n    usermanagement() {\r\n      if (this.$data.userinfo.isAdmin === \"1\") {\r\n        this.$router.push({path: '/UserManagement'})\r\n      } else {\r\n        this.$message({\r\n          message: \"没有权限！\",\r\n          type: 'warning'\r\n        })\r\n      }\r\n    },\r\n    logout() {\r\n      axios.get('mu/logout').then(res => {\r\n        this.$message({\r\n          message: \"注销登录成功！\",\r\n          type: 'success'\r\n        })\r\n        return res;\r\n      })\r\n      this.$router.push({path: '/'})\r\n    },\r\n    echartsInit: function () {\r\n      this.email = this.$store.state.userinfo.email\r\n      let myChart = this.$echarts.init(document.getElementById('main'), 'dark');\r\n      let nowDate = new Date();\r\n      let date = {\r\n        year: nowDate.getFullYear(),\r\n        month: nowDate.getMonth() + 1,\r\n        date: nowDate.getDate(),\r\n      }\r\n      this.option.xAxis.data[5] = date.month + '月'\r\n      this.option.xAxis.data[4] = date.month - 1 + '月'\r\n      this.option.xAxis.data[3] = date.month - 2 + '月'\r\n      this.option.xAxis.data[2] = date.month - 3 + '月'\r\n      this.option.xAxis.data[1] = date.month - 4 + '月'\r\n      this.option.xAxis.data[0] = date.month - 5 + '月'\r\n\r\n      axios.get((`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n        if (res.status === 200) {\r\n          console.log(\"project 200\")\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let projectDate = new Date(res.data[i].setTime)\r\n            this.month = projectDate.getMonth() + 1\r\n            if (date.month == this.month) {\r\n              this.projectMonth[5]++\r\n            } else if (date.month - 1 == this.month) {\r\n              this.projectMonth[4]++\r\n            } else if (date.month - 2 == this.month) {\r\n              this.projectMonth[3]++\r\n            } else if (date.month - 3 == this.month) {\r\n              this.projectMonth[2]++\r\n            } else if (date.month - 4 == this.month) {\r\n              this.projectMonth[1]++\r\n            } else if (date.month - 5 == this.month) {\r\n              this.projectMonth[0]++\r\n            }\r\n          }\r\n          this.option.series[1].data = this.projectMonth\r\n          axios.get((`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res0 => {\r\n            if (res0.status === 200) {\r\n              console.log(\"thesis 200\")\r\n              for (let i = 0; i < res0.data.length; i++) {\r\n                let thesisDate = new Date(res0.data[i].submitTime)\r\n                this.month = thesisDate.getMonth() + 1\r\n                if (date.month == this.month) {\r\n                  this.thesisMonth[5]++\r\n                } else if (date.month - 1 == this.month) {\r\n                  this.thesisMonth[4]++\r\n                } else if (date.month - 2 == this.month) {\r\n                  this.thesisMonth[3]++\r\n                } else if (date.month - 3 == this.month) {\r\n                  this.thesisMonth[2]++\r\n                } else if (date.month - 4 == this.month) {\r\n                  this.thesisMonth[1]++\r\n                } else if (date.month - 5 == this.month) {\r\n                  this.thesisMonth[0]++\r\n                }\r\n              }\r\n              this.option.series[0].data = this.thesisMonth\r\n              myChart.setOption(this.option);\r\n            } else if (res0.status === 420) {\r\n              myChart.setOption(this.option);\r\n            }\r\n          })\r\n        }\r\n      },error=>{\r\n        console.log(error)\r\n        if (error && error.response) {\r\n          switch (error.response.status) {\r\n            case 400: this.$message.error(\"400\")\r\n              break;\r\n            case 403: this.$message.error(\"没有权限！\");\r\n              break;\r\n            case 420: {\r\n              this.$message.error(\"没有找到！\")\r\n\r\n            }\r\n              break;\r\n            default: this.$message.error(\"连接错误！\")\r\n          }\r\n        }else{\r\n          this.$message.error(\"连接服务器失败！\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.el-row {\r\n  margin-bottom: 20px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n.el-col {\r\n  border-radius: 4px;\r\n}\r\n\r\n//.bg-purple-dark {\r\n//  background: #99a9bf;\r\n//}\r\n//\r\n//.bg-purple {\r\n//  background: #d3dce6;\r\n//}\r\n////\r\n////.bg-purple-light {\r\n////  background: #e5e9f2;\r\n////}\r\n\r\n.grid-content1 {\r\n  border-radius: 4px;\r\n  min-height: 36px;\r\n}\r\n.grid-content2 {\r\n  border-radius: 4px;\r\n  width: 600px;\r\n  min-height: 36px;\r\n}\r\n//\r\n//.row-bg {\r\n//  padding: 10px 0;\r\n//  background-color: #f9fafc;\r\n//}\r\n\r\n.el-main{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.el-aside::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.user {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  .user-head {\r\n    width: 200px;\r\n    height: 200px;\r\n    border-radius: 50%;\r\n    margin-right: 20px;\r\n    margin-bottom: 50px;\r\n  }\r\n\r\n  .user-info {\r\n    .user-nickname {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .user-name {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .user-access {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .user-phone {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .user-email {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .user-school {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}