{"ast":null,"code":"import axios from \"axios\";\nimport echarts from \"echarts\";\nexport default {\n  name: \"StatisticalSubmissionInformation\",\n  data() {\n    return {\n      userData: {\n        name: '',\n        phone: '',\n        email: '',\n        thesisNumber: '0',\n        thesisScore: '0',\n        projectNumber: '0',\n        projectScore: '0',\n        score: 0\n      }\n    };\n  },\n  created: function () {\n    this.email = this.$route.query.email;\n    // this.$message.success(this.email)\n    axios.get(`mu/getUsernames/email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.name = res.data.name;\n        this.userData.phone = res.data.phone;\n        this.userData.email = res.data.email;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    axios.get(`mu/project/getScoreByEmail?email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.projectScore = res.data;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      }\n    });\n    axios.get(`mu/thesis/getScoreByEmail?email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.thesisScore = res.data;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      }\n    });\n    axios.get(`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n      if (res.status === 200) {\n        let arr = Array.from(res.data);\n        this.userData.projectNumber = arr.length;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    axios.get(`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n      if (res.status === 200) {\n        let arr = Array.from(res.data);\n        this.userData.thesisNumber = arr.length;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n  },\n  methods: {\n    echartsInit() {\n      const chartDom = document.getElementById('main');\n      const myChart = echarts.init(chartDom);\n      let option;\n      option = {\n        title: {\n          text: 'Stacked Line'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'Email',\n          type: 'line',\n          stack: 'Total',\n          data: [120, 132, 101, 134, 90, 230, 210]\n        }, {\n          name: 'Union Ads',\n          type: 'line',\n          stack: 'Total',\n          data: [220, 182, 191, 234, 290, 330, 310]\n        }, {\n          name: 'Video Ads',\n          type: 'line',\n          stack: 'Total',\n          data: [150, 232, 201, 154, 190, 330, 410]\n        }, {\n          name: 'Direct',\n          type: 'line',\n          stack: 'Total',\n          data: [320, 332, 301, 334, 390, 330, 320]\n        }, {\n          name: 'Search Engine',\n          type: 'line',\n          stack: 'Total',\n          data: [820, 932, 901, 934, 1290, 1330, 1320]\n        }]\n      };\n      myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"mappings":"AA0CA;AACA;AACA;EACAA;EACAC;IACA;MACAC;QACAF;QACAG;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;IACA;IACAC;MACA;QACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;MACAC;QACAC;UACAC;QACA;QACAC;UACAC;QACA;QACAC;UACAlB;QACA;QACAmB;UACAC;UACAC;UACAC;UACAC;QACA;QACAC;UACAC;YACAC;UACA;QACA;QACAC;UACAC;UACAC;UACA7B;QACA;QACA8B;UACAF;QACA;QACAG,SACA;UACAhC;UACA6B;UACAI;UACAhC;QACA,GACA;UACAD;UACA6B;UACAI;UACAhC;QACA,GACA;UACAD;UACA6B;UACAI;UACAhC;QACA,GACA;UACAD;UACA6B;UACAI;UACAhC;QACA,GACA;UACAD;UACA6B;UACAI;UACAhC;QACA;MAEA;MACAiC;IACA;EACA;AACA","names":["name","data","userData","phone","email","thesisNumber","thesisScore","projectNumber","projectScore","score","created","axios","methods","echartsInit","option","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","stack","myChart"],"sourceRoot":"src/view","sources":["StatisticalSubmissionInformation.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <el-descriptions  :column=\"2\" border >\r\n      <el-descriptions-item\r\n          label=\"用户名\"\r\n          label-class-name=\"my-label\"\r\n          content-class-name=\"my-content\">\r\n        {{ userData.name }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"手机号\" >\r\n        {{ userData.phone }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"邮箱\">\r\n        {{ userData.email }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item\r\n          content-class-name=\"my-content\"\r\n          label=\"上传总分数\">\r\n        {{ parseInt(this.userData.thesisScore)+parseInt(this.userData.projectScore) }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"上传论文总数量\">\r\n        {{ userData.thesisNumber }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"论文总分数\">\r\n        {{ userData.thesisScore }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"上传项目总数量\">\r\n        {{ userData.projectNumber }}\r\n      </el-descriptions-item>\r\n      <el-descriptions-item label=\"项目总分数\">\r\n        {{ userData.projectScore }}\r\n      </el-descriptions-item>\r\n    </el-descriptions>\r\n    <el-button type=\"primary\" @click=\"echartsInit\"></el-button>\r\n    <div style=\"width: auto;height: 400px\" id=\"main\">\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport echarts from \"echarts\";\r\nexport default {\r\n  name: \"StatisticalSubmissionInformation\",\r\n  data() {\r\n    return {\r\n      userData: {\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        thesisNumber: '0',\r\n        thesisScore: '0',\r\n        projectNumber: '0',\r\n        projectScore: '0',\r\n        score: 0\r\n      }\r\n    }\r\n  },\r\n  created: function () {\r\n    this.email=this.$route.query.email\r\n    // this.$message.success(this.email)\r\n    axios.get(`mu/getUsernames/email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.name=res.data.name\r\n        this.userData.phone=res.data.phone\r\n        this.userData.email=res.data.email\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    axios.get(`mu/project/getScoreByEmail?email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.projectScore=res.data\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }\r\n    })\r\n    axios.get(`mu/thesis/getScoreByEmail?email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.thesisScore=res.data\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }\r\n    })\r\n    axios.get((`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n      if(res.status===200){\r\n        let arr = Array.from(res.data);\r\n        this.userData.projectNumber=arr.length\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    axios.get((`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n      if(res.status===200){\r\n        let arr = Array.from(res.data);\r\n        this.userData.thesisNumber=arr.length\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n  },\r\n  methods:{\r\n    echartsInit() {\r\n      const chartDom = document.getElementById('main');\r\n      const myChart = echarts.init(chartDom);\r\n      let option;\r\n      option = {\r\n        title: {\r\n          text: 'Stacked Line'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine']\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: 'Email',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [120, 132, 101, 134, 90, 230, 210]\r\n          },\r\n          {\r\n            name: 'Union Ads',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [220, 182, 191, 234, 290, 330, 310]\r\n          },\r\n          {\r\n            name: 'Video Ads',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [150, 232, 201, 154, 190, 330, 410]\r\n          },\r\n          {\r\n            name: 'Direct',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [320, 332, 301, 334, 390, 330, 320]\r\n          },\r\n          {\r\n            name: 'Search Engine',\r\n            type: 'line',\r\n            stack: 'Total',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n          }\r\n        ]\r\n      };\r\n      myChart.setOption(option);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.my-label {\r\n  background: #E1F3D8;\r\n}\r\n\r\n.my-content {\r\n  background: #FDE2E2;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}