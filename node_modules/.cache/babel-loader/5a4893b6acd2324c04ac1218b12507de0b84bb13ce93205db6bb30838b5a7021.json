{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport store from \"@/vuex/store\";\nimport CommonAside from \"../component/CommonAside\";\nimport CommonHeader from \"@/component/CommonHeader\";\nexport default {\n  name: \"UserViewProjectsAndPapers\",\n  store,\n  components: {\n    CommonAside,\n    CommonHeader\n  },\n  data() {\n    return {\n      activeName: '',\n      projectData: [],\n      thesisData: [],\n      tabPosition: 'left'\n    };\n  },\n  created: function () {\n    this.userEmail = this.$store.state.userinfo.email;\n    this.isAdmin = this.$store.state.userinfo.isAdmin;\n    // this.$message.success(this.userEmail)\n    // this.$message.success(this.isAdmin)\n    if (this.isAdmin === \"1\") {\n      axios.get(`mu/project/queryAll`).then(res => {\n        let arr = Array.from(res.data);\n        arr.forEach(item => {\n          this.channelId = item.channelId;\n          axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\n            if (qll.status === 200) {\n              this.channelName = qll.data.name;\n              this.$set(item, 'channelName', this.channelName);\n            } else if (qll.status === 403) {\n              this.$message.error(\"Unauthorized\");\n            } else if (qll.status === 404) {\n              this.$message.error(\"serve error\");\n            }\n          });\n        });\n        this.projectData = arr;\n      });\n      axios.get(`mu/thesis/queryAll`).then(res => {\n        let arr = Array.from(res.data);\n        arr.forEach(item => {\n          this.channelId = item.channelId;\n          axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\n            if (qll.status === 200) {\n              this.channelName = qll.data.name;\n              this.$set(item, 'channelName', this.channelName);\n            } else if (qll.status === 403) {\n              this.$message.error(\"Unauthorized\");\n            } else if (qll.status === 404) {\n              this.$message.error(\"serve error\");\n            }\n          });\n        });\n        this.thesisData = arr;\n      });\n    } else if (this.isAdmin === \"0\") {\n      axios.get(`mu/project/queryByUploaderEmail?uploaderEmail=${this.userEmail}`).then(res => {\n        let arr = Array.from(res.data);\n        arr.forEach(item => {\n          this.channelId = item.channelId;\n          axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\n            if (qll.status === 200) {\n              this.channelName = qll.data.name;\n              this.$set(item, 'channelName', this.channelName);\n            } else if (qll.status === 403) {\n              this.$message.error(\"Unauthorized\");\n            } else if (qll.status === 404) {\n              this.$message.error(\"serve error\");\n            }\n          });\n        });\n        this.projectData = arr;\n      });\n      axios.get(`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.userEmail}`).then(res => {\n        let arr = Array.from(res.data);\n        arr.forEach(item => {\n          this.channelId = item.channelId;\n          axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\n            if (qll.status === 200) {\n              this.channelName = qll.data.name;\n              this.$set(item, 'channelName', this.channelName);\n            } else if (qll.status === 403) {\n              this.$message.error(\"Unauthorized\");\n            } else if (qll.status === 404) {\n              this.$message.error(\"serve error\");\n            }\n          });\n        });\n        this.thesisData = arr;\n      });\n    }\n  },\n  methods: {\n    parseTime(time, cFormat) {\n      if (arguments.length === 0) {\n        return null;\n      }\n      const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n      let date;\n      if (typeof time === 'object') {\n        date = time;\n      } else {\n        if (typeof time === 'string' && /^[0-9]+$/.test(time)) {\n          time = parseInt(time);\n        }\n        if (typeof time === 'number' && time.toString().length === 10) {\n          time = time * 1000;\n        }\n        date = new Date(time);\n      }\n      const formatObj = {\n        y: date.getFullYear(),\n        m: date.getMonth() + 1,\n        d: date.getDate(),\n        h: date.getHours(),\n        i: date.getMinutes(),\n        s: date.getSeconds(),\n        a: date.getDay()\n      };\n      const time_str = format.replace(/{([ymdhisa])+}/g, (result, key) => {\n        const value = formatObj[key];\n        // Note: getDay() returns 0 on Sunday\n        if (key === 'a') {\n          return ['日', '一', '二', '三', '四', '五', '六'][value];\n        }\n        return value.toString().padStart(2, '0');\n      });\n      return time_str;\n    },\n    filterStatus(value, row, column) {\n      const property = column['property'];\n      return row[property] === value;\n    },\n    handleClick(tab, event) {\n      console.log(tab);\n      console.log(event);\n    },\n    clickThesis(row, event, column) {\n      console.log(row, event, column);\n      this.$store.state.thesis.id = row.id;\n      this.$message.success(this.$store.state.thesis.id);\n      this.$router.push({\n        path: '/PaperDetail'\n      });\n    },\n    clickProject(row, event, column) {\n      console.log(row, event, column);\n      // this.$message.success(\"id=\" + row.id + \",uploaderEmail=\" + row.uploaderEmail)\n      this.$store.state.project.id = row.id;\n      console.log(this.$store.state.project.id);\n      console.log(this.$store.state.userinfo.email);\n      this.$router.push({\n        path: '/ProjectDetail'\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA4GA;AACA;AACA;AACA;AAEA;EACAA;EACAC;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;IACA;MACAC;QACA;QACAC;UACA;UACAD;YACA;cACA;cACA;YACA;cACA;YACA;cACA;YACA;UACA;QACA;QACA;MACA;MACAA;QACA;QACAC;UACA;UACAD;YACA;cACA;cACA;YACA;cACA;YACA;cACA;YACA;UACA;QACA;QACA;MACA;IACA;MACAA;QACA;QACAC;UACA;UACAD;YACA;cACA;cACA;YACA;cACA;YACA;cACA;YACA;UACA;QACA;QACA;MACA;MACAA;QACA;QACAC;UACA;UACAD;YACA;cACA;cACA;YACA;cACA;YACA;cACA;YACA;UACA;QACA;QACA;MACA;IACA;EACA;EACAE;IACAC;MACA;QACA;MACA;MACA;MACA;MACA;QACAC;MACA;QACA;UACAC;QACA;QACA;UACAA;QACA;QACAD;MACA;MACA;QACAE;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;QACA;QACA;QACA;UACA;QACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACAC;MACAA;IACA;IACAC;MACAD;MACA;MACA;MACA;QAAAE;MAAA;IACA;IACAC;MACAH;MACA;MACA;MACAA;MACAA;MACA;QAAAE;MAAA;IACA;EACA;AACA","names":["name","store","components","CommonAside","CommonHeader","data","activeName","projectData","thesisData","tabPosition","created","axios","arr","methods","parseTime","date","time","y","m","d","h","i","s","a","filterStatus","handleClick","console","clickThesis","path","clickProject"],"sourceRoot":"src/view","sources":["UserViewProjectsAndPapers.vue"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <el-header>\r\n      <CommonHeader/>\r\n    </el-header>\r\n    <el-container>\r\n      <el-aside width=\"200px\">\r\n        <CommonAside/>\r\n      </el-aside>\r\n      <el-main>\r\n        <div>\r\n          <el-breadcrumb>\r\n            <el-breadcrumb-item :to=\"{ path: '/UserViewProjectsAndPapers' }\">查看提交</el-breadcrumb-item>\r\n            <el-breadcrumb-item v-if=\"activeName == 'thesis'\">论文提交</el-breadcrumb-item>\r\n            <el-breadcrumb-item v-else-if=\"activeName == 'project'\">项目提交</el-breadcrumb-item>\r\n          </el-breadcrumb>\r\n          <el-tabs v-model=\"activeName\" style=\"width: 1000px\" stretch @tab-click=\"handleClick\">\r\n            <el-tab-pane label=\"论文\" name=\"thesis\">\r\n              <el-table\r\n                  :data=\"thesisData\"\r\n                  stripe\r\n                  border\r\n                  height=\"400\"\r\n                  style=\"width: 100%\"\r\n                  @row-click=\"clickThesis\"\r\n                  :default-sort=\"{prop: 'submitTime', order: 'descending'}\">\r\n                <el-table-column\r\n                    label=\"提交时间\"\r\n                    sortable\r\n                    align=\"center\"\r\n                    prop=\"submitTime\">\r\n                  <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.submitTime!= null\">\r\n              {{ parseTime(scope.row.submitTime) }}\r\n            </span>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"题目\"\r\n                    prop=\"name\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"负责人\"\r\n                    prop=\"maintainer\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"所属研究方向\"\r\n                    prop=\"channelName\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"审核状态\"\r\n                    :filters=\"[{text:'审核中',value:'Waiting'},{text:'审核通过',value:'Accept'},{text:'审核不通过',value:'Reject'},]\"\r\n                    :filter-method=\"filterStatus\"\r\n                    prop=\"status\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n            <el-tab-pane label=\"项目\" name=\"project\">\r\n              <el-table\r\n                  :data=\"projectData\"\r\n                  stripe\r\n                  border\r\n                  height=\"400\"\r\n                  style=\"width: 100%\"\r\n                  @row-click=\"clickProject\"\r\n                  :default-sort=\"{prop: 'setTime', order: 'descending'}\">\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"提交时间\"\r\n                    prop=\"setTime\"\r\n                    sortable>\r\n                </el-table-column>\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"名称\"\r\n                    prop=\"name\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"负责人\"\r\n                    prop=\"maintainer\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"项目类别\"\r\n                    prop=\"channelName\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                    align=\"center\"\r\n                    label=\"审核状态\"\r\n                    prop=\"status\"\r\n                    :filters=\"[{text:'审核中',value:'Waiting'},{text:'审核通过',value:'Accept'},{text:'审核不通过',value:'Reject'},]\"\r\n                    :filter-method=\"filterStatus\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-tab-pane>\r\n          </el-tabs>\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport store from \"@/vuex/store\";\r\nimport CommonAside from \"../component/CommonAside\"\r\nimport CommonHeader from \"@/component/CommonHeader\";\r\n\r\nexport default {\r\n  name: \"UserViewProjectsAndPapers\",\r\n  store,\r\n  components: {\r\n    CommonAside,\r\n    CommonHeader\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: '',\r\n      projectData: [],\r\n      thesisData: [],\r\n      tabPosition: 'left'\r\n    };\r\n  },\r\n  created: function () {\r\n    this.userEmail = this.$store.state.userinfo.email\r\n    this.isAdmin = this.$store.state.userinfo.isAdmin\r\n    // this.$message.success(this.userEmail)\r\n    // this.$message.success(this.isAdmin)\r\n    if (this.isAdmin === \"1\") {\r\n      axios.get((`mu/project/queryAll`)).then(res => {\r\n        let arr = Array.from(res.data);\r\n        arr.forEach(item => {\r\n          this.channelId = item.channelId\r\n          axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\r\n            if (qll.status === 200) {\r\n              this.channelName = qll.data.name\r\n              this.$set(item, 'channelName', this.channelName)\r\n            } else if (qll.status === 403) {\r\n              this.$message.error(\"Unauthorized\")\r\n            } else if (qll.status === 404) {\r\n              this.$message.error(\"serve error\")\r\n            }\r\n          })\r\n        })\r\n        this.projectData = arr\r\n      })\r\n      axios.get((`mu/thesis/queryAll`)).then(res => {\r\n        let arr = Array.from(res.data);\r\n        arr.forEach(item => {\r\n          this.channelId = item.channelId\r\n          axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\r\n            if (qll.status === 200) {\r\n              this.channelName = qll.data.name\r\n              this.$set(item, 'channelName', this.channelName)\r\n            } else if (qll.status === 403) {\r\n              this.$message.error(\"Unauthorized\")\r\n            } else if (qll.status === 404) {\r\n              this.$message.error(\"serve error\")\r\n            }\r\n          })\r\n        })\r\n        this.thesisData = arr\r\n      })\r\n    } else if (this.isAdmin === \"0\") {\r\n      axios.get((`mu/project/queryByUploaderEmail?uploaderEmail=${this.userEmail}`)).then(res => {\r\n        let arr = Array.from(res.data);\r\n        arr.forEach(item => {\r\n          this.channelId = item.channelId\r\n          axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\r\n            if (qll.status === 200) {\r\n              this.channelName = qll.data.name\r\n              this.$set(item, 'channelName', this.channelName)\r\n            } else if (qll.status === 403) {\r\n              this.$message.error(\"Unauthorized\")\r\n            } else if (qll.status === 404) {\r\n              this.$message.error(\"serve error\")\r\n            }\r\n          })\r\n        })\r\n        this.projectData = arr\r\n      })\r\n      axios.get((`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.userEmail}`)).then(res => {\r\n        let arr = Array.from(res.data);\r\n        arr.forEach(item => {\r\n          this.channelId = item.channelId\r\n          axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\r\n            if (qll.status === 200) {\r\n              this.channelName = qll.data.name\r\n              this.$set(item, 'channelName', this.channelName)\r\n            } else if (qll.status === 403) {\r\n              this.$message.error(\"Unauthorized\")\r\n            } else if (qll.status === 404) {\r\n              this.$message.error(\"serve error\")\r\n            }\r\n          })\r\n        })\r\n        this.thesisData = arr\r\n      })\r\n    }\r\n  },\r\n  methods: {\r\n    parseTime(time, cFormat) {\r\n      if (arguments.length === 0) {\r\n        return null\r\n      }\r\n      const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n      let date\r\n      if (typeof time === 'object') {\r\n        date = time\r\n      } else {\r\n        if ((typeof time === 'string') && (/^[0-9]+$/.test(time))) {\r\n          time = parseInt(time)\r\n        }\r\n        if ((typeof time === 'number') && (time.toString().length === 10)) {\r\n          time = time * 1000\r\n        }\r\n        date = new Date(time)\r\n      }\r\n      const formatObj = {\r\n        y: date.getFullYear(),\r\n        m: date.getMonth() + 1,\r\n        d: date.getDate(),\r\n        h: date.getHours(),\r\n        i: date.getMinutes(),\r\n        s: date.getSeconds(),\r\n        a: date.getDay()\r\n      }\r\n      const time_str = format.replace(/{([ymdhisa])+}/g, (result, key) => {\r\n        const value = formatObj[key]\r\n        // Note: getDay() returns 0 on Sunday\r\n        if (key === 'a') {\r\n          return ['日', '一', '二', '三', '四', '五', '六'][value]\r\n        }\r\n        return value.toString().padStart(2, '0')\r\n      })\r\n      return time_str\r\n    },\r\n    filterStatus(value, row, column) {\r\n      const property = column['property'];\r\n      return row[property] === value;\r\n    },\r\n    handleClick(tab, event) {\r\n      console.log(tab)\r\n      console.log(event)\r\n    },\r\n    clickThesis(row, event, column) {\r\n      console.log(row, event, column)\r\n      this.$store.state.thesis.id = row.id\r\n      this.$message.success(this.$store.state.thesis.id)\r\n      this.$router.push({path: '/PaperDetail'})\r\n    },\r\n    clickProject(row, event, column) {\r\n      console.log(row, event, column)\r\n      // this.$message.success(\"id=\" + row.id + \",uploaderEmail=\" + row.uploaderEmail)\r\n      this.$store.state.project.id = row.id\r\n      console.log(this.$store.state.project.id)\r\n      console.log(this.$store.state.userinfo.email)\r\n      this.$router.push({path: '/ProjectDetail'})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-aside {\r\n  display: block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 60px;\r\n  bottom: 0;\r\n}\r\n\r\n.el-main {\r\n  position: absolute;\r\n  left: 200px;\r\n  right: 0;\r\n  top: 60px;\r\n  bottom: 0;\r\n  overflow-y: scroll;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}