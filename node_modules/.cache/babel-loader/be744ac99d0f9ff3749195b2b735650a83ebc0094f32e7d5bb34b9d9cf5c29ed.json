{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"UserViewProjectsAndPapers\",\n  data() {\n    return {\n      activeName: '',\n      projectData: [],\n      thesisData: [],\n      tabPosition: 'left'\n    };\n  },\n  created: function () {\n    this.userEmail = this.$route.query.email;\n    this.$message.success(this.userEmail);\n    axios.get(`mu/project/queryAll`).then(res => {\n      let arr = Array.from(res.data);\n      arr.forEach(item => {\n        this.channelId = item.channelId;\n        axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\n          if (qll.status === 200) {\n            this.channelName = qll.data.name;\n            this.$set(item, 'channelName', this.channelName);\n          } else if (qll.status === 403) {\n            this.$message.error(\"Unauthorized\");\n          } else if (qll.status === 404) {\n            this.$message.error(\"serve error\");\n          }\n        });\n      });\n      this.projectData = arr;\n    });\n    axios.get(`mu/thesis/queryAll`).then(res => {\n      let arr = Array.from(res.data);\n      arr.forEach(item => {\n        this.channelId = item.channelId;\n        axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll => {\n          if (qll.status === 200) {\n            this.channelName = qll.data.name;\n            this.$set(item, 'channelName', this.channelName);\n          } else if (qll.status === 403) {\n            this.$message.error(\"Unauthorized\");\n          } else if (qll.status === 404) {\n            this.$message.error(\"serve error\");\n          }\n        });\n      });\n      this.thesisData = arr;\n    });\n  },\n  methods: {\n    handleClick(tab, event) {\n      console.log(tab);\n      console.log(event);\n    },\n    clickThesis(row, event, column) {\n      console.log(row, event, column);\n      this.$message.success(row.name);\n    },\n    clickProject(row, event, column) {\n      console.log(row, event, column);\n      this.$message.success(row.id + row.uploaderEmail);\n    }\n  }\n};","map":{"version":3,"mappings":"AA2BA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;IACAC;MACA;MACAC;QACA;QACAD;UACA;YACA;YACA;UACA;YACA;UACA;YACA;UACA;QACA;MACA;MACA;IACA;IACAA;MACA;MACAC;QACA;QACAD;UACA;YACA;YACA;UACA;YACA;UACA;YACA;UACA;QACA;MACA;MACA;IACA;EACA;EACAE;IACAC;MACAC;MACAA;IACA;IACAC;MACAD;MACA;IACA;IACAE;MACAF;MACA;IACA;EACA;AACA","names":["name","data","activeName","projectData","thesisData","tabPosition","created","axios","arr","methods","handleClick","console","clickThesis","clickProject"],"sourceRoot":"src/view","sources":["UserViewProjectsAndPapers.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <a style=\"color:dodgerblue\">提交项目/论文</a>\r\n    <el-tabs  v-model=\"activeName\" style=\"width: 900px\" stretch @tab-click=\"handleClick\" ref=\"tabs\">\r\n      <el-tab-pane label=\"论文\" name=\"thesis\">\r\n        <el-table :data=\"thesisData\" stripe style=\"width: 100%\" @row-click=\"clickThesis\" >\r\n          <el-table-column label=\"题目\" prop=\"name\" ></el-table-column>\r\n          <el-table-column label=\"负责人\" prop=\"maintainer\" ></el-table-column>\r\n          <el-table-column label=\"所属研究方向\" prop=\"channelName\" ></el-table-column>\r\n          <el-table-column label=\"提交时间\" prop=\"submitTime\" ></el-table-column>\r\n          <el-table-column label=\"审核状态\" prop=\"status\" ></el-table-column>\r\n        </el-table>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"项目\" name=\"project\">\r\n        <el-table :data=\"projectData\" stripe style=\"width: 100%\" @row-click=\"clickProject\" >\r\n          <el-table-column label=\"名称\" prop=\"name\" ></el-table-column>\r\n          <el-table-column label=\"负责人\" prop=\"maintainer\" ></el-table-column>\r\n          <el-table-column label=\"项目类别\" prop=\"channelName\" ></el-table-column>\r\n          <el-table-column label=\"提交时间\" prop=\"setTime\" ></el-table-column>\r\n          <el-table-column label=\"审核状态\" prop=\"status\" ></el-table-column>\r\n        </el-table>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"UserViewProjectsAndPapers\",\r\n  data() {\r\n    return {\r\n      activeName:'',\r\n      projectData: [],\r\n      thesisData:[],\r\n      tabPosition: 'left'\r\n    };\r\n  },\r\n  created: function () {\r\n    this.userEmail=this.$route.query.email\r\n    this.$message.success(this.userEmail)\r\n    axios.get((`mu/project/queryAll`)).then(res => {\r\n      let arr=Array.from(res.data);\r\n      arr.forEach(item=>{\r\n        this.channelId=item.channelId\r\n        axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll=>{\r\n          if(qll.status===200){\r\n            this.channelName=qll.data.name\r\n            this.$set(item,'channelName',this.channelName)\r\n          }else if(qll.status===403){\r\n            this.$message.error(\"Unauthorized\")\r\n          }else if(qll.status===404){\r\n            this.$message.error(\"serve error\")\r\n          }\r\n        })\r\n      })\r\n      this.projectData=arr\r\n    })\r\n    axios.get((`mu/thesis/queryAll`)).then(res => {\r\n      let arr=Array.from(res.data);\r\n      arr.forEach(item=>{\r\n        this.channelId=item.channelId\r\n        axios.get(`mu/getChannelById?id=${this.channelId}`).then(qll=>{\r\n          if(qll.status===200){\r\n            this.channelName=qll.data.name\r\n            this.$set(item,'channelName',this.channelName)\r\n          }else if(qll.status===403){\r\n            this.$message.error(\"Unauthorized\")\r\n          }else if(qll.status===404){\r\n            this.$message.error(\"serve error\")\r\n          }\r\n        })\r\n      })\r\n      this.thesisData=arr\r\n    })\r\n  },\r\n  methods: {\r\n    handleClick(tab, event) {\r\n      console.log(tab)\r\n      console.log(event)\r\n    },\r\n    clickThesis(row, event, column) {\r\n      console.log(row,  event,  column)\r\n      this.$message.success(row.name)\r\n    },\r\n    clickProject(row, event, column) {\r\n      console.log(row,  event,  column)\r\n      this.$message.success(row.id+row.uploaderEmail)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}