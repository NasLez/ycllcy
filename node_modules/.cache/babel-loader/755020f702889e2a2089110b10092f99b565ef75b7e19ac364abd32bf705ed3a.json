{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport axios from 'axios';\nimport router from './router';\n// 完整引入，main.js写入以下代码\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nVue.use(ElementUI);\nVue.prototype.$http = axios;\nVue.config.productionTip = false;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\naxios.defaults.withCredentials = true; //允许跨域携带cookie信息\n// 设置get,post请求头Content-Type为form,注意：大部分场景都适用，但文件上传需另外处理\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\naxios.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded';\n// 设置请求头后需使用拦截器处理下参数序列化成URL的形式\naxios.defaults.transformRequest = [function (data) {\n  let ret = '';\n  for (let it in data) {\n    ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&';\n  }\n  return ret;\n}];\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","axios","router","ElementUI","use","prototype","$http","config","productionTip","defaults","headers","post","withCredentials","get","transformRequest","data","ret","it","encodeURIComponent","render","h","$mount"],"sources":["C:/Users/Administrator/ycl/src/main.js"],"sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport axios from 'axios';\r\nimport router from './router'\r\n// 完整引入，main.js写入以下代码\r\nimport ElementUI from 'element-ui'\r\nimport 'element-ui/lib/theme-chalk/index.css'\r\nVue.use(ElementUI)\r\nVue.prototype.$http = axios;\r\nVue.config.productionTip = false;\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\r\naxios.defaults.withCredentials = true;//允许跨域携带cookie信息\r\n// 设置get,post请求头Content-Type为form,注意：大部分场景都适用，但文件上传需另外处理\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\naxios.defaults.headers.get['Content-Type'] = 'application/x-www-form-urlencoded';\r\n// 设置请求头后需使用拦截器处理下参数序列化成URL的形式\r\naxios.defaults.transformRequest = [function (data) {\r\n  let ret = ''\r\n  for (let it in data) {\r\n    ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\r\n  }\r\n  return ret\r\n}]\r\n\r\nnew Vue({\r\n  router,\r\n  render:h=>h(App),\r\n}).$mount('#app')\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B;AACA,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,sCAAsC;AAC7CJ,GAAG,CAACK,GAAG,CAACD,SAAS,CAAC;AAClBJ,GAAG,CAACM,SAAS,CAACC,KAAK,GAAGL,KAAK;AAC3BF,GAAG,CAACQ,MAAM,CAACC,aAAa,GAAG,KAAK;AAChCP,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,iDAAiD;AAC/FV,KAAK,CAACQ,QAAQ,CAACG,eAAe,GAAG,IAAI,CAAC;AACtC;AACAX,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,mCAAmC;AACjFV,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAACG,GAAG,CAAC,cAAc,CAAC,GAAG,mCAAmC;AAChF;AACAZ,KAAK,CAACQ,QAAQ,CAACK,gBAAgB,GAAG,CAAC,UAAUC,IAAI,EAAE;EACjD,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIC,EAAE,IAAIF,IAAI,EAAE;IACnBC,GAAG,IAAIE,kBAAkB,CAACD,EAAE,CAAC,GAAG,GAAG,GAAGC,kBAAkB,CAACH,IAAI,CAACE,EAAE,CAAC,CAAC,GAAG,GAAG;EAC1E;EACA,OAAOD,GAAG;AACZ,CAAC,CAAC;AAEF,IAAIjB,GAAG,CAAC;EACNG,MAAM;EACNiB,MAAM,EAACC,CAAC,IAAEA,CAAC,CAACpB,GAAG;AACjB,CAAC,CAAC,CAACqB,MAAM,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}