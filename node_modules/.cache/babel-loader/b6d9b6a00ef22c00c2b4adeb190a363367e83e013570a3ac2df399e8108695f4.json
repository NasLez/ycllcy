{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"StatisticalSubmissionInformation\",\n  data() {\n    return {\n      userData: {\n        name: '',\n        phone: '',\n        email: '',\n        thesisNumber: '0',\n        thesisScore: '0',\n        projectNumber: '0',\n        projectScore: '0',\n        score: 0\n      }\n    };\n  },\n  created: function () {\n    this.email = this.$route.query.email;\n    // this.$message.success(this.email)\n    axios.get(`mu/getUsernames/email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.name = res.data.name;\n        this.userData.phone = res.data.phone;\n        this.userData.email = res.data.email;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    axios.get(`mu/project/getScoreByEmail?email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.projectScore = res.data;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      }\n    });\n    axios.get(`mu/thesis/getScoreByEmail?email=${this.email}`).then(res => {\n      if (res.status === 200) {\n        this.userData.thesisScore = res.data;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      }\n    });\n    axios.get(`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n      if (res.status === 200) {\n        let arr = Array.from(res.data);\n        this.userData.projectNumber = arr.length;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    axios.get(`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`).then(res => {\n      if (res.status === 200) {\n        let arr = Array.from(res.data);\n        this.userData.thesisNumber = arr.length;\n      } else if (res.status === 403) {\n        this.$message.error(\"Unauthorized\");\n      } else if (res.status === 400) {\n        this.$message.error(\"Serve Error\");\n      } else if (res.status === 404) {\n        this.$message.error(\"Not Found\");\n      }\n    });\n    this.userData.score = parase(this.userData.thesisScore);\n  }\n};","map":{"version":3,"mappings":"AAiCA;AAEA;EACAA;EACAC;IACA;MACAC;QACAF;QACAG;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;IACA;IACAC;MACA;QACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAA;MACA;QACA;QACA;MACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;IACA;EACA;AACA","names":["name","data","userData","phone","email","thesisNumber","thesisScore","projectNumber","projectScore","score","created","axios"],"sourceRoot":"src/view","sources":["StatisticalSubmissionInformation.vue"],"sourcesContent":["<template>\r\n  <el-descriptions  :column=\"2\" border>\r\n    <el-descriptions-item\r\n        label=\"用户名\"\r\n        label-class-name=\"my-label\"\r\n        content-class-name=\"my-content\">\r\n      {{ userData.name }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item label=\"手机号\">\r\n      {{ userData.phone }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item label=\"邮箱\">\r\n      {{ userData.email }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item label=\"上传总分数\">\r\n      {{ userData.score }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item label=\"上传论文总数量\">\r\n      {{ userData.thesisNumber }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item label=\"论文总分数\">\r\n      {{ userData.thesisScore }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item label=\"上传项目总数量\">\r\n      {{ userData.projectNumber }}\r\n    </el-descriptions-item>\r\n    <el-descriptions-item label=\"项目总分数\">\r\n      {{ userData.projectScore }}\r\n    </el-descriptions-item>\r\n  </el-descriptions>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"StatisticalSubmissionInformation\",\r\n  data() {\r\n    return {\r\n      userData: {\r\n        name: '',\r\n        phone: '',\r\n        email: '',\r\n        thesisNumber: '0',\r\n        thesisScore: '0',\r\n        projectNumber: '0',\r\n        projectScore: '0',\r\n        score: 0\r\n      }\r\n    }\r\n  },\r\n  created: function () {\r\n    this.email=this.$route.query.email\r\n    // this.$message.success(this.email)\r\n    axios.get(`mu/getUsernames/email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.name=res.data.name\r\n        this.userData.phone=res.data.phone\r\n        this.userData.email=res.data.email\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    axios.get(`mu/project/getScoreByEmail?email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.projectScore=res.data\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }\r\n    })\r\n    axios.get(`mu/thesis/getScoreByEmail?email=${this.email}`).then(res=>{\r\n      if(res.status===200){\r\n        this.userData.thesisScore=res.data\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }\r\n    })\r\n    axios.get((`mu/project/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n      if(res.status===200){\r\n        let arr = Array.from(res.data);\r\n        this.userData.projectNumber=arr.length\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    axios.get((`mu/thesis/queryByUploaderEmail?uploaderEmail=${this.email}`)).then(res => {\r\n      if(res.status===200){\r\n        let arr = Array.from(res.data);\r\n        this.userData.thesisNumber=arr.length\r\n      }else if(res.status===403){\r\n        this.$message.error(\"Unauthorized\")\r\n      }else if(res.status===400){\r\n        this.$message.error(\"Serve Error\")\r\n      }else if(res.status===404){\r\n        this.$message.error(\"Not Found\")\r\n      }\r\n    })\r\n    this.userData.score=parase(this.userData.thesisScore)\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.my-label {\r\n  background: #E1F3D8;\r\n}\r\n\r\n.my-content {\r\n  background: #FDE2E2;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}