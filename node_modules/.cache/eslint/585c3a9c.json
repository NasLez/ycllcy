[{"C:\\Users\\Administrator\\ycl\\src\\main.js":"1","C:\\Users\\Administrator\\ycl\\src\\App.vue":"2","C:\\Users\\Administrator\\ycl\\src\\router\\index.js":"3","C:\\Users\\Administrator\\ycl\\src\\view\\LogInAndRegister.vue":"4","C:\\Users\\Administrator\\ycl\\src\\view\\HomePage.vue":"5","C:\\Users\\Administrator\\ycl\\src\\view\\ChannelManagement.vue":"6","C:\\Users\\Administrator\\ycl\\src\\view\\SubmitProjectsAndPapers.vue":"7","C:\\Users\\Administrator\\ycl\\src\\view\\ResetPassword.vue":"8","C:\\Users\\Administrator\\ycl\\src\\view\\updateChannel.vue":"9","C:\\Users\\Administrator\\ycl\\src\\view\\UserManagement.vue":"10","C:\\Users\\Administrator\\ycl\\src\\view\\ProjectDetail.vue":"11","C:\\Users\\Administrator\\ycl\\src\\view\\ProjectEdit.vue":"12","C:\\Users\\Administrator\\ycl\\src\\view\\PaperDetail.vue":"13","C:\\Users\\Administrator\\ycl\\src\\view\\UserViewProjectsAndPapers.vue":"14","C:\\Users\\Administrator\\ycl\\src\\view\\PaperEdit.vue":"15","C:\\Users\\Administrator\\ycl\\src\\component\\StatisticalSubmissionInformation.vue":"16","C:\\Users\\Administrator\\ycl\\src\\component\\CommonAside.vue":"17","C:\\Users\\Administrator\\ycl\\src\\component\\CommonHeader.vue":"18","C:\\Users\\Administrator\\ycl\\src\\vuex\\store.js":"19"},{"size":740,"mtime":1670601080222,"results":"20","hashOfConfig":"21"},{"size":596,"mtime":1670728602303,"results":"22","hashOfConfig":"21"},{"size":2041,"mtime":1670585494777,"results":"23","hashOfConfig":"21"},{"size":6999,"mtime":1670728602303,"results":"24","hashOfConfig":"21"},{"size":27752,"mtime":1670729646580,"results":"25","hashOfConfig":"21"},{"size":10199,"mtime":1670728602303,"results":"26","hashOfConfig":"21"},{"size":5758,"mtime":1670758148901,"results":"27","hashOfConfig":"21"},{"size":5313,"mtime":1670662842222,"results":"28","hashOfConfig":"21"},{"size":8897,"mtime":1670728602313,"results":"29","hashOfConfig":"21"},{"size":12181,"mtime":1670759590674,"results":"30","hashOfConfig":"21"},{"size":8986,"mtime":1670759380299,"results":"31","hashOfConfig":"21"},{"size":11761,"mtime":1670759311296,"results":"32","hashOfConfig":"21"},{"size":9406,"mtime":1670759380286,"results":"33","hashOfConfig":"21"},{"size":10409,"mtime":1670728602313,"results":"34","hashOfConfig":"21"},{"size":10362,"mtime":1670759311286,"results":"35","hashOfConfig":"21"},{"size":7179,"mtime":1670551984116,"results":"36","hashOfConfig":"21"},{"size":3571,"mtime":1670728602303,"results":"37","hashOfConfig":"21"},{"size":940,"mtime":1670728602303,"results":"38","hashOfConfig":"21"},{"size":1588,"mtime":1670630823897,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"h6bnzt",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Administrator\\ycl\\src\\main.js",[],[],"C:\\Users\\Administrator\\ycl\\src\\App.vue",[],[],"C:\\Users\\Administrator\\ycl\\src\\router\\index.js",[],"C:\\Users\\Administrator\\ycl\\src\\view\\LogInAndRegister.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\HomePage.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\ChannelManagement.vue",["81"],"<template>\r\n  <el-container>\r\n    <el-header>\r\n      <CommonHeader/>\r\n    </el-header>\r\n    <el-container>\r\n      <el-aside width=\"200px\">\r\n        <CommonAside/>\r\n      </el-aside>\r\n      <el-main class=\"box\">\r\n        <div class=\"box-block\">\r\n          <el-breadcrumb separator=\"/\">\r\n            <el-breadcrumb-item :to=\"{ path: '/ChannelManagement' }\">查看通道</el-breadcrumb-item>\r\n            <el-breadcrumb-item v-if=\"activeName == 'thesis'\">论文通道</el-breadcrumb-item>\r\n            <el-breadcrumb-item v-else-if=\"activeName == 'project'\">项目通道</el-breadcrumb-item>\r\n            <el-breadcrumb-item v-else-if=\"activeName == 'addChannel'\">添加通道</el-breadcrumb-item>\r\n          </el-breadcrumb>\r\n          <br>\r\n          <div class=\"box-block-content\">\r\n            <el-tabs type=\"border-card\" v-model=\"activeName\"  stretch @tab-click=\"handleClick\" ref=\"tabs\">\r\n              <el-tab-pane label=\"论文\" name=\"thesis\">\r\n                <el-table :data=\"thesisData\" stripe border style=\"width: 100%\" @row-click=\"clickData\" >\r\n                  <el-table-column label=\"研究方向\"  prop=\"name\"></el-table-column>\r\n                  <el-table-column label=\"提交截止日期\"  prop=\"due\">\r\n                    <template slot-scope=\"scope\">\r\n                      {{parseTime(scope.row.due)}}\r\n                    </template>\r\n                  </el-table-column>\r\n                </el-table>\r\n              </el-tab-pane>\r\n              <el-tab-pane label=\"项目\" name=\"project\">\r\n                <el-table :data=\"projectData\" stripe border style=\"width: 100%\" @row-click=\"clickData\" >\r\n                  <el-table-column  label=\"所属类别\" prop=\"name\"></el-table-column>\r\n                  <el-table-column label=\"提交截止日期\" prop=\"due\">\r\n                    <template slot-scope=\"scope\">\r\n                      {{parseTime(scope.row.due)}}\r\n                    </template>\r\n                  </el-table-column>\r\n                </el-table>\r\n              </el-tab-pane>\r\n              <el-tab-pane label=\"添加通道\" name=\"addChannel\">\r\n\r\n                <el-form :label-position=\"labelPosition\" label-width=\"120px\" :model=\"addChannel\">\r\n                  <el-form-item label=\"通道名称\">\r\n                    <el-input type=\"string\" v-model=\"addChannel.name\" style=\"width:225px\"\r\n                              placeholder=\"请输入通道名称\"></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"通道类型\">\r\n                    <el-select v-model=\"addChannel.type\" placeholder=\"请选择通道类型\">\r\n                      <el-option\r\n                          v-for=\"item in options\"\r\n                          :key=\"item.value\"\r\n                          :label=\"item.label\"\r\n                          :value=\"item.value\">\r\n                      </el-option>\r\n                    </el-select>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"通道创建者\">\r\n                    <el-input type=\"string\" v-model=\"addChannel.creator\" style=\"width:225px\"\r\n                              placeholder=\"请输入通道创建者\"></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"通道创建者邮箱\">\r\n                    <el-input type=\"email\" v-model=\"addChannel.creatorEmail\" style=\"width:225px\"\r\n                              placeholder=\"请输入通道创建者邮箱\"></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"通道得分\">\r\n                    <el-input type=\"string\" v-model=\"addChannel.score\" style=\"width:225px\"\r\n                              placeholder=\"请输入通道得分\"></el-input>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"通道截止时间\">\r\n                    <el-date-picker\r\n                        v-model=\"addChannel.due\"\r\n                        type=\"datetime\"\r\n                        placeholder=\"请选择通道截止时间\"\r\n                        value-format=\"yyyy-MM-dd HH:mm:ss\">\r\n                    </el-date-picker>\r\n                  </el-form-item>\r\n                  <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"add\">添加通道信息</el-button>\r\n                  </el-form-item>\r\n                </el-form>\r\n              </el-tab-pane>\r\n            </el-tabs>\r\n          </div>\r\n\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport store from \"@/vuex/store\";\r\nimport CommonAside from \"../component/CommonAside\"\r\nimport CommonHeader from \"@/component/CommonHeader\";\r\nexport default {\r\n  name: \"ChannelManagement\",\r\n  store,\r\n  components: {\r\n    CommonAside,\r\n    CommonHeader\r\n  },\r\n  data() {\r\n    return {\r\n      labelPosition:'right',\r\n      activeName:'',\r\n      projectData: [],\r\n      projectData1:[],\r\n      thesisData1: [],\r\n      thesisData:[],\r\n      tabPosition: 'left',\r\n      addChannel:{\r\n        name:'',\r\n        type:'',\r\n        creator:'',\r\n        creatorEmail:'',\r\n        score:'',\r\n        due:'',\r\n      },\r\n      options: [{\r\n        value: 'Thesis',\r\n        label: '论文'\r\n      }, {\r\n        value: 'Project',\r\n        label: '项目'\r\n      }],\r\n      value: ''\r\n    };\r\n  },\r\n  created:function () {\r\n    axios.get((`mu/listChannel`)).then(res => {\r\n      this.tableData = res.data;\r\n      for (let i = 0,j=0,k=0; i < this.tableData.length; i++) {\r\n        if (res.data[i].type === \"Thesis\") {\r\n          // alert(res.data[i].name)\r\n          this.$data.thesisData1[j]=res.data[i]\r\n          j++\r\n        }else{\r\n          this.$data.projectData1[k]=res.data[i]\r\n          k++\r\n        }\r\n      }\r\n      this.thesisData=this.thesisData1;\r\n      this.projectData=this.projectData1\r\n      console.log(this.tableData);\r\n    })\r\n  },\r\n  methods: {\r\n    parseTime(time, cFormat) {\r\n      if (arguments.length === 0) {\r\n        return null\r\n      }\r\n      const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n      let date\r\n      if (typeof time === 'object') {\r\n        date = time\r\n      } else {\r\n        if ((typeof time === 'string') && (/^[0-9]+$/.test(time))) {\r\n          time = parseInt(time)\r\n        }\r\n        if ((typeof time === 'number') && (time.toString().length === 10)) {\r\n          time = time * 1000\r\n        }\r\n        date = new Date(time)\r\n      }\r\n      const formatObj = {\r\n        y: date.getFullYear(),\r\n        m: date.getMonth() + 1,\r\n        d: date.getDate(),\r\n        h: date.getHours(),\r\n        i: date.getMinutes(),\r\n        s: date.getSeconds(),\r\n        a: date.getDay()\r\n      }\r\n      const time_str = format.replace(/{([ymdhisa])+}/g, (result, key) => {\r\n        const value = formatObj[key]\r\n        // Note: getDay() returns 0 on Sunday\r\n        if (key === 'a') {\r\n          return ['日', '一', '二', '三', '四', '五', '六'][value]\r\n        }\r\n        return value.toString().padStart(2, '0')\r\n      })\r\n      return time_str\r\n    },\r\n    add(){\r\n      if (this.$data.addChannel.name === '') {\r\n        this.$message({\r\n          message: \"请输入新的通道名称！\",\r\n          type: 'warning'\r\n        })\r\n      } else if (this.$data.addChannel.type === '') {\r\n        this.$message({\r\n          message: \"请输入新的通道类型！\",\r\n          type: 'warning'\r\n        })\r\n      } else if (this.$data.addChannel.creator === '') {\r\n        this.$message({\r\n          message: \"请输入新的通道创建者！\",\r\n          type: 'warning'\r\n        })\r\n      } else if (this.$data.addChannel.creatorEmail === '') {\r\n        this.$message({\r\n          message: \"请输入新的通道创建者邮箱！\",\r\n          type: 'warning'\r\n        })\r\n      } else if (this.$data.addChannel.score === '') {\r\n        this.$message({\r\n          message: \"请输入新的通道分数！\",\r\n          type: 'warning'\r\n        })\r\n      } else if (this.$data.addChannel.due === '') {\r\n        this.$message({\r\n          message: \"请输入新的通道截止日期！\",\r\n          type: 'warning'\r\n        })\r\n      } else {\r\n        this.look = this.$route.query.row\r\n        this.due = this.$data.addChannel.due.toString()\r\n        axios.put(`mu/addChannel?name=${this.$data.addChannel.name}&type=${this.$data.addChannel.type}&creator=${this.$data.addChannel.creator}&creatorEmail=${this.$data.addChannel.creatorEmail}&score=${this.$data.addChannel.score}&due=${this.$data.addChannel.due}`).then(res => {\r\n          axios.get((`mu/listChannel`)).then(res => {\r\n            this.tableData = res.data;\r\n            for (let i = 0,j=0,k=0; i < this.tableData.length; i++) {\r\n              if (res.data[i].type === \"Thesis\") {\r\n                // alert(res.data[i].name)\r\n                this.$data.thesisData1[j]=res.data[i]\r\n                j++\r\n              }else{\r\n                this.$data.projectData1[k]=res.data[i]\r\n                k++\r\n              }\r\n            }\r\n            this.thesisData=this.thesisData1;\r\n            this.projectData=this.projectData1\r\n            console.log(this.tableData);\r\n          })\r\n        },error=>{\r\n          if (error && error.response) {\r\n            switch (error.response.status) {\r\n              case 400: this.$message.error(\"400\")\r\n                break;\r\n              case 403: this.$message.error(\"没有权限！\");\r\n                break;\r\n              default: this.$message.error(\"连接错误！\")\r\n            }\r\n          }else{\r\n            this.$message.error(\"连接服务器失败！\")\r\n          }\r\n        })\r\n      }\r\n    },\r\n    handleClick(tab, event) {\r\n      console.log(tab, event);\r\n    },\r\n    clickData(row, event, column) {\r\n      console.log(row,  event,  column)\r\n      this.$store.state.channel.id=row.id\r\n      this.$router.push({path: '/updateChannel'})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-aside {\r\n  display: block;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 60px;\r\n  bottom: 0;\r\n}\r\n.el-main {\r\n  position: absolute;\r\n  left: 200px;\r\n  right: 0;\r\n  top: 60px;\r\n  bottom: 0;\r\n  overflow-y: scroll;\r\n}\r\n.box-block{\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.el-header{\r\n  padding: 0 0;\r\n}\r\n</style>\r\n","C:\\Users\\Administrator\\ycl\\src\\view\\SubmitProjectsAndPapers.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\ResetPassword.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\updateChannel.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\UserManagement.vue",["82","83"],"C:\\Users\\Administrator\\ycl\\src\\view\\ProjectDetail.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\ProjectEdit.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\PaperDetail.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\UserViewProjectsAndPapers.vue",[],"C:\\Users\\Administrator\\ycl\\src\\view\\PaperEdit.vue",[],"C:\\Users\\Administrator\\ycl\\src\\component\\StatisticalSubmissionInformation.vue",[],"C:\\Users\\Administrator\\ycl\\src\\component\\CommonAside.vue",[],"C:\\Users\\Administrator\\ycl\\src\\component\\CommonHeader.vue",[],"C:\\Users\\Administrator\\ycl\\src\\vuex\\store.js",[],{"ruleId":"84","severity":2,"message":"85","line":220,"column":273,"nodeType":"86","messageId":"87","endLine":220,"endColumn":276},{"ruleId":"88","severity":2,"message":"89","line":38,"column":51,"nodeType":"86","endLine":38,"endColumn":56},{"ruleId":"88","severity":2,"message":"89","line":81,"column":51,"nodeType":"86","endLine":81,"endColumn":56},"no-unused-vars","'res' is defined but never used.","Identifier","unusedVar","vue/no-unused-vars","'scope' is defined but never used."]